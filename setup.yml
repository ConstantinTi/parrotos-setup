---
- name: Setup Kali Linux Environment
  hosts: localhost
  connection: local
  become: yes
  vars:
    apt_packages:
      - nmap
      - wireshark
      - python3
      - python3-pip
      - python3-venv
      - python3-pipx
      - bloodhound
      - bloodhound-python
      - neo4j
      - seclists
      - golang-go
      - amass
      - net-tools
      - htop
      - ffuf
      - exploitdb
      - cmake
      - wpscan
      - hash-identifier
      - hashid
      - dnsrecon
      - enum4linux
      - impacket-scripts
      - nikto
      - onesixtyone
      - sslscan
      - whatweb
      - docker.io
    git_repositories:
      - { repo: 'https://github.com/dirkjanm/PKINITtools.git', dest: '/opt/red/tools/PKINITtools' }
      - { repo: 'https://github.com/Wh04m1001/DFSCoerce.git', dest: '/opt/red/tools/DFSCoerce' }
      - { repo: 'https://github.com/topotam/PetitPotam.git', dest: '/opt/red/tools/PetitPotam' }
      - { repo: 'https://github.com/cube0x0/noPac.git', dest: '/opt/red/tools/noPac' }
      - { repo: 'https://github.com/GhostPack/PSPKIAudit.git', dest: '/opt/red/tools/PSPKIAudit' }
      - { repo: 'https://github.com/ParrotSec/mimikatz.git', dest: '/opt/red/tools/mimikatz' }
      - { repo: 'https://github.com/GhostPack/Certify', dest: '/opt/red/tools/certify' }
      - { repo: 'https://github.com/S3cur3Th1sSh1t/PowerSharpPack', dest: '/opt/red/tools/PowerSharpPack' }
      - { repo: 'https://github.com/vivami/SauronEye.git', dest: '/opt/red/tools/SauronExe' }
      - { repo: 'https://github.com/DidierStevens/DidierStevensSuite.git', dest: '/opt/blue/DidierStevensSuite' }
      - { repo: 'https://github.com/BC-SECURITY/IronSharpPack.git', dest: '/opt/red/tools/IronSharpPack' }
      - { repo: 'https://github.com/Syslifters/offsec-tools', dest: '/opt/red/tools/offsec-tools' }
      - { repo: 'https://github.com/orlyjamie/mimikittenz', dest: '/opt/red/tools/mimikittenz' }
    folders:
      - /opt/red
      - /opt/red/tools
      - /opt/red/powershell
      - /opt/blue
    files_to_download:
      - { url: 'https://github.com/Group3r/Group3r/releases/download/1.0.53/Group3r.exe', dest: '/opt/red/tools/Group3r.exe' }
      - { url: 'https://github.com/ConstantinTi/pentest-setup/raw/main/executables/PSGPO-Evasion.exe', dest: '/opt/red/tools/PSGPO-Evasion.exe' }
      - { url: 'https://github.com/ConstantinTi/pentest-setup/raw/main/executables/SpoolSample.exe', dest: '/opt/red/tools/SpoolSample.exe' }
      - { url: 'https://github.com/ConstantinTi/pentest-setup/raw/main/executables/SharpView.exe', dest: '/opt/red/tools/SharpView.exe' }
      - { url: 'https://github.com/ConstantinTi/pentest-setup/raw/main/executables/SharpMapExec.exe', dest: '/opt/red/tools/SharpMapExec.exe' }
      - { url: 'https://github.com/ConstantinTi/pentest-setup/raw/main/executables/Rubeus.exe', dest: '/opt/red/tools/Rubeus.exe' }
      - { url: 'https://github.com/itm4n/PrintSpoofer/releases/download/v1.0/PrintSpoofer32.exe', dest: '/opt/red/tools/PrintSpoofer32.exe' }
      - { url: 'https://github.com/itm4n/PrintSpoofer/releases/download/v1.0/PrintSpoofer64.exe', dest: '/opt/red/tools/PrintSpoofer64.exe' }
      - { url: 'https://github.com/SnaffCon/Snaffler/releases/download/1.0.103/Snaffler.exe', dest: '/opt/red/tools/Snaffler.exe' }
      - { url: 'https://raw.githubusercontent.com/Kevin-Robertson/Inveigh/master/Inveigh.ps1', dest: '/opt/red/powershell/Inveigh.ps1' }
      - { url: 'https://raw.githubusercontent.com/dafthack/DomainPasswordSpray/master/DomainPasswordSpray.ps1', dest: '/opt/red/powershell/DomainPasswordSpray.ps1' }
      - { url: 'https://raw.githubusercontent.com/sense-of-security/ADRecon/master/ADRecon.ps1', dest: '/opt/red/powershell/ADRecon.ps1' }
      - { url: 'https://raw.githubusercontent.com/cube0x0/Security-Assessment/master/SecurityAssessment.ps1', dest: '/opt/red/powershell/SecurityAssessment.ps1' }
      - { url: 'https://raw.githubusercontent.com/leoloobeek/LAPSToolkit/master/LAPSToolkit.ps1', dest: '/opt/red/powershell/LAPSToolkit.ps1' }
      - { url: 'https://raw.githubusercontent.com/411Hall/JAWS/master/jaws-enum.ps1', dest: '/opt/red/powershell/jaws-enum.ps1' }
      - { url: 'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1', dest: '/opt/red/powershell//PowerView.ps1' }
      - { url: 'https://raw.githubusercontent.com/dafthack/HostRecon/master/HostRecon.ps1', dest: '/opt/red/powershell/HostRecon.ps1' }
      - { url: 'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Privesc/PowerUp.ps1', dest: '/opt/red/powershell/PowerUp.ps1' }
      - { url: 'https://raw.githubusercontent.com/itm4n/PrivescCheck/master/PrivescCheck.ps1', dest: '/opt/red/powershell/PrivescCheck.ps1' }
      - { url: 'https://raw.githubusercontent.com/NetSPI/PowerUpSQL/master/PowerUpSQL.ps1', dest: '/opt/red/powershell/PowerUpSQL.ps1' }
      - { url: 'https://raw.githubusercontent.com/BloodHoundAD/BloodHound/master/Collectors/SharpHound.ps1', dest: '/opt/red/powershell/SharpHound.ps1' }
      - { url: 'https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Kerberoast.ps1', dest: '/opt/red/powershell/Invoke-Kerberoast.ps1' }
      - { url: 'https://github.com/carlospolop/PEASS-ng/releases/latest/download/winPEASany_ofs.exe', dest: '/opt/red/tools/0winPEASany_ofs.exe' }
      - { url: 'https://github.com/AlessandroZ/LaZagne/releases/download/2.4.3/lazagne.exe', dest: '/opt/red/tools/lazagne.exe' }
      - { url: 'https://github.com/DominicBreuker/pspy/releases/download/v1.2.0/pspy64', dest: '/opt/red/tools/pspy64' }
      - { url: 'https://github.com/DominicBreuker/pspy/releases/download/v1.2.0/pspy32', dest: '/opt/red/tools/pspy32' }
      - { url: 'https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh', dest: '/opt/red/tools/linpeas.sh' }
      - { url: 'https://github.com/volatilityfoundation/volatility3/releases/download/v2.5.2/volatility3-2.5.2-py3-none-any.whl', dest: '/opt/blue/vol3.whl' }
      - { url: 'https://raw.githubusercontent.com/ZephrFish/Bloodhound-CustomQueries/main/customqueries.json', dest: '~/.config/bloodhound/customqueries.json' }
      - { url: 'https://github.com/darkoperator/Veil-PowerView/blob/master/PowerView/functions/Invoke-ShareFinder.ps1', dest: '/opt/red/powershell/Invoke-ShareFinder.ps1' }
    python_packages:
      - requests
      - search-that-hash
      - oletools
      - certipy-ad
    shell_commands:
      - 'echo "Running initial setup tasks..."'
      - 'touch /opt/tools/setup.log'
      - 'sudo gunzip -d /usr/share/wordlists/rockyou.txt.gz'
      - 'echo "export PATH=$PATH:/home/c/go/bin" >> /home/c/.bashrc'
      - 'echo "export PATH=$PATH:/home/c/go/bin" >> /home/c/.zshrc'
      - 'echo "export PATH=$PATH:/home/c/.local/bin" >> /home/c/.bashrc'
      - 'echo "export PATH=$PATH:/home/c/.local/bin" >> /home/c/.zshrc'
      - 'echo "alias ls='ls -liah'" >> /home/c/.bashrc'
      - 'echo "alias ls='ls -liah'" >> /home/c/.zshrc'
      - 'export PATH=$PATH:/home/c/go/bin'
      - 'export PATH=$PATH:/home/c/.local/bin'
      - 'alias ls='ls -liah''
      - 'wpscan --update'
      - 'sudo sqlmap --update'
      - 'pipx ensurepath'
      - 'pipx install git+https://github.com/Pennyw0rth/NetExec'
      - 'echo "Setup completed on $(date)" >> /opt/tools/setup.log'
    username: "c"

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install required apt packages
      apt:
        name: "{{ apt_packages }}"
        state: present

    - name: Create directory structure
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items: "{{ folders }}"

    - name: Clone Git repositories
      git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
        clone: yes
        update: yes
      with_items: "{{ git_repositories }}"

    - name: Download files
      get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        mode: '0644'
      with_items: "{{ files_to_download }}"

    - name: Install Python packages
      pip:
        name: "{{ item }}"
        state: present
      with_items: "{{ python_packages }}"

    - name: Execute shell commands
      shell: "{{ item }}"
      with_items: "{{ shell_commands }}"
    
    - name: Grant full sudo privileges to specific user
      lineinfile:
        path: "/etc/sudoers.d/{{ username }}"
        line: "{{ username }} ALL=(ALL) NOPASSWD: ALL"
        create: yes
        validate: 'visudo -cf %s'
